local PromptInterface = loadstring(game:HttpGet("https://raw.githubusercontent.com/CookieCrumble2/Prompt-UI/refs/heads/main/load.lua"))()

PromptInterface.create(
    "REAYRADE",
    "Do you wanna load the script?",
    "Yes",
    "No",
    function(response)
        if response then
        local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoolManYesYes/Kr4k/refs/heads/main/LibReCoded.lua"))()

local Window = Library.Window('REAYRADE LOADER')

local Test1 = Window.CreateTab('GAMES')

Test1.CreateButton("math Murder", function()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/CoolManYesYes/Gghfh/refs/heads/main/MathMurderer.txt'))()
end)

Test1.CreateButton("Westbound", function()
	local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/trinyxScripts/Simplicity/refs/heads/main/simplicity.lua"))()

local window = Library:CreateWindow({
	ToggleKeybind = Enum.KeyCode.End,
	LoadingAnimation = {
		Title = "WestBound",
		Text = "Something",
		Duration = 2
	}
})

local tab= window:CreateTab({
	Icon = "rbxassetid://10709753149",
	Text = "Main"
})

tab:CreateButton({
	Text = "Auto farm",
	Callback = function()

loadstring(game:HttpGet("https://pastefy.app/ALSXA1in/raw"))()
end
	})
end)

Test1.CreateButton("Blade ball", function()
	local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

local window = DrRayLibrary:Load("RAEYRADE | BLADE BALL", "Default")

local tab = DrRayLibrary.newTab("Main", "103757468")

tab.newButton("Auto parry", "Prints Hello!", function()
    local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")

local Player = Players.LocalPlayer
local connection
local previousVelocity = nil
local previousPlayerPosition = nil
local hitboxLine = nil

local function GetBallFromFolder(folder)
    for _, ball in ipairs(folder:GetChildren()) do
        if ball:GetAttribute("realBall") then
            if ball:GetAttribute("parried") == nil then
                ball:SetAttribute("parried", false)
            end
            return ball
        end
    end
    return nil
end

local function ResetConnection()
    if connection then
        connection:Disconnect()
        connection = nil
    end
end

workspace.Balls.ChildAdded:Connect(function(child)
    if Player.Character and Player.Character.Parent and Player.Character.Parent.Name == "Alive" then
        local ball = GetBallFromFolder(workspace.Balls)
        if not ball then return end
        ResetConnection()
        connection = ball:GetAttributeChangedSignal("target"):Connect(function()
            ball:SetAttribute("parried", false)
        end)
    end
end)

workspace.TrainingBalls.ChildAdded:Connect(function(child)
    if Player.Character and Player.Character.Parent and Player.Character.Parent.Name ~= "Alive" then
        local ball = GetBallFromFolder(workspace.TrainingBalls)
        if not ball then return end
        ResetConnection()
        connection = ball:GetAttributeChangedSignal("target"):Connect(function()
            ball:SetAttribute("parried", false)
        end)
    end
end)

local function UpdateHitboxLine(startPos, endPos)
    local distance = (startPos - endPos).Magnitude
    if not hitboxLine then
        hitboxLine = Instance.new("Part")
        hitboxLine.Anchored = true
        hitboxLine.CanCollide = false
        hitboxLine.Color = Color3.new(1, 0, 0)
        hitboxLine.Material = Enum.Material.Neon
        hitboxLine.Transparency = 0.3
        hitboxLine.Parent = workspace
    end
    hitboxLine.Size = Vector3.new(0.2, 0.2, distance)
    hitboxLine.CFrame = CFrame.new(startPos, endPos) * CFrame.new(0, 0, -distance / 2)
end

RunService.PreSimulation:Connect(function()
    local character = Player.Character
    if not character then return end
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    local ballFolder = (character.Parent and character.Parent.Name == "Alive") and workspace.Balls or workspace.TrainingBalls
    local ball = GetBallFromFolder(ballFolder)
    if not ball then
        if hitboxLine then
            hitboxLine:Destroy()
            hitboxLine = nil
        end
        return
    end

    UpdateHitboxLine(hrp.Position, ball.Position)
    
    local currentVelocity = ball.zoomies.VectorVelocity
    local speed = currentVelocity.Magnitude
    local distance = (hrp.Position - ball.Position).Magnitude
    local curvature = 0
    if previousVelocity and speed > 0 and previousVelocity.Magnitude > 0 then
        local dot = math.clamp(previousVelocity.Unit:Dot(currentVelocity.Unit), -1, 1)
        curvature = math.acos(dot)
    end
    previousVelocity = currentVelocity

    local reactionTimeThreshold = (ballFolder == workspace.TrainingBalls) and 0.7 or 0.55
    if curvature > math.rad(10) then
        reactionTimeThreshold = reactionTimeThreshold + 0.1
    end

    local effectiveThreshold = reactionTimeThreshold
    if ballFolder == workspace.TrainingBalls then
        if speed < 10 then
            local multiplier = math.clamp(10 / speed, 1, 3)
            effectiveThreshold = reactionTimeThreshold * multiplier
        elseif speed >= 10 and speed < 70 then
            effectiveThreshold = reactionTimeThreshold * (speed / 70) * 0.8
        end
    else
        if speed >= 20 and speed < 70 then
            effectiveThreshold = reactionTimeThreshold * (speed / 70)
        end
    end
    if speed > 100 then
        effectiveThreshold = effectiveThreshold + ((speed - 100) / 150)
    end

    local otherPlayerNearby = false
    for _, other in ipairs(Players:GetPlayers()) do
        if other ~= Player and other.Character and other.Character:FindFirstChild("HumanoidRootPart") then
            local otherHrp = other.Character.HumanoidRootPart
            if (hrp.Position - otherHrp.Position).Magnitude < 20 then
                otherPlayerNearby = true
                break
            end
        end
    end
    if otherPlayerNearby then
        effectiveThreshold = effectiveThreshold + 0.2
    end

    local humanoid = character:FindFirstChild("Humanoid")
    local direction = (ball.Position - hrp.Position).Unit
    local ballApproachSpeed = currentVelocity:Dot(direction)
    local playerApproachSpeed = hrp.Velocity:Dot(direction)
    local relativeSpeed = ballApproachSpeed - playerApproachSpeed
    if relativeSpeed <= 0 then
        relativeSpeed = currentVelocity.Magnitude
    end
    local predictedTime = distance / relativeSpeed

    local TELEPORT_THRESHOLD = 50
    local TELEPORT_DISTANCE_THRESHOLD = 15
    if previousPlayerPosition then
        local displacement = (hrp.Position - previousPlayerPosition).Magnitude
        if displacement > TELEPORT_THRESHOLD and distance < TELEPORT_DISTANCE_THRESHOLD then
            if ball:GetAttribute("target") == Player.Name and not ball:GetAttribute("parried") then
                VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
                ball:SetAttribute("parried", true)
            end
        end
    end

    if ball:GetAttribute("target") == Player.Name and not ball:GetAttribute("parried") and speed > 0 and distance <= 50 then
        if predictedTime <= effectiveThreshold then
            VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, game, 0)
            ball:SetAttribute("parried", true)
        end
    end

    -- Removed auto-rotation and movement
    previousPlayerPosition = hrp.Position
end)

-- RAEYRADE
end)
end)

Test1.CreateButton("Tsb", function()
	local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoolManYesYes/Cool/refs/heads/main/cat.txt"))()

local Window = Library:CreateWindow("RAEYRADE | TSB", Vector2.new(500, 400), Enum.KeyCode.RightControl)

local AimingTab = Window:CreateTab("Main")

local testSection = AimingTab:CreateSector("Main", "left")

testSection:AddButton("Autofarm", function(IhateGayPeople)
    local function performAction(toolName)
    local tool = game:GetService("Players").LocalPlayer.Backpack:FindFirstChild(toolName)
    if tool then
        local args = {
            [1] = {
                ["Tool"] = tool,
                ["Goal"] = "Console Move"
            }
        }
        game:GetService("Players").LocalPlayer.Character.Communicate:FireServer(unpack(args))
    end
end

-- Function to teleport to a player and perform actions
local function teleportAndPerformActions(player)
    -- Perform actions while teleporting every 0.2 seconds
    while true do
        -- Teleport to the player every 0.2 seconds
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
        
        -- Perform the actions
        performAction("Normal Punch")
        wait(1) -- Adjust delay if needed
        performAction("Shove")
        wait(1) -- Adjust delay if needed
        performAction("Uppercut")
        wait(1) -- Adjust delay if needed
        performAction("Consecutive Punches")
        
        -- Wait for 0.2 seconds before teleporting again
        task.wait(0.2)
    end
end

-- Main loop to teleport to each player and perform actions
while true do
    -- Get the list of players
    local players = game:GetService("Players"):GetPlayers()
    
    -- Start teleporting and performing actions for each player continuously
    for _, player in ipairs(players) do
        if player ~= game:GetService("Players").LocalPlayer then
            teleportAndPerformActions(player)  -- Teleport to the first player and perform actions
        end
    end
end
end)

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

Notification:Notify(
    {Title = "Information", Description = "For autofarm use saitama"},
    {OutlineColor = Color3.fromRGB(80, 80, 80),Time = 5, Type = "default"}
)
end)

Test1.CreateButton("Blade ball", function()
	local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

local window = DrRayLibrary:Load("RAEYRADE | BLADE BALL", "Default")

local tab = DrRayLibrary.newTab("Main", "103757468")

tab.newButton("Auto parry", "Prints Hello!", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/WWwMcG6u"))()
end)
end)

Test1.CreateButton("Universal", function()
	local repo = "https://raw.githubusercontent.com/CoolManYesYes/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(repo .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(repo .. "addons/SaveManager.lua"))()

local Window = Library:CreateWindow({
    Title = 'RAEYRADE | UNIVERSAL',
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

local MyButton = LeftGroupBox:AddButton({
    Text = 'Fly',
    Func = function()
        local ScreenGui1 = Instance.new("ScreenGui")
ScreenGui1.Parent = game.Players.LocalPlayer.PlayerGui
loadstring(game:HttpGet("https://pastebin.com/raw/D3nJwqb8"))()

local Frame1 = Instance.new("Frame")
Frame1.Parent = ScreenGui1
Frame1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame1.BackgroundTransparency = 0.05
Frame1.BorderSizePixel = 0
Frame1.Size = UDim2.new(0.2, 0, 0.2, 0)
Frame1.Position = UDim2.new(1, 0, 0.8, 0)

local TextLabel1 = Instance.new("TextLabel")
TextLabel1.Parent = Frame1
TextLabel1.BackgroundColor3 = Color3.fromRGB(0, 100, 150)
TextLabel1.BorderSizePixel = 0
TextLabel1.Size = UDim2.new(1, 0, 0.25, 0)
TextLabel1.TextXAlignment = Enum.TextXAlignment.Left
TextLabel1.Text = " Fly Gui"
TextLabel1.Font = Enum.Font.SourceSans
TextLabel1.TextColor3 = Color3.fromRGB(242, 243, 243)
TextLabel1.TextSize = 18
TextLabel1.TextColor3 = Color3.fromRGB(242, 243, 243)

local TextLabel2 = Instance.new("TextLabel")
TextLabel2.BackgroundTransparency = 1
TextLabel2.Position = UDim2.new(0.05, 0, 0.3, 0)
TextLabel2.Size = UDim2.new(0.9, 0, 0.7, 0)
TextLabel2.Font = Enum.Font.SourceSans
TextLabel2.Text = "Fly script by RAEYRADE team"
TextLabel2.TextScaled = true
TextLabel2.TextColor3 = Color3.fromRGB(242, 243, 243)
TextLabel2.Parent = Frame1

local TextButton1 = Instance.new("TextButton")
TextButton1.Parent = TextLabel1
TextButton1.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton1.BackgroundTransparency = 0.5
TextButton1.Size = UDim2.new(0.1, 0, 1, 0)
TextButton1.Position = UDim2.new(0.9, 0, 0, 0)
TextButton1.TextColor3 = Color3.fromRGB(242, 243, 243)
TextButton1.Text = "X"
TextButton1.TextScaled = true
TextButton1.Font = Enum.Font.SourceSansLight

TextButton1.MouseButton1Click:Connect(function()
    ScreenGui1:Destroy()
end)

local TweenService = game:GetService("TweenService")
local panel = Frame1
local startPosition = panel.Position
local goalPosition = UDim2.new(0.8, 0, 0.8, 0)

local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
local tween = TweenService:Create(panel, tweenInfo, {Position = goalPosition})

tween:Play()
wait(15)
tween:Play()
    end,
    Tooltip = 'Adds a fly gui'
})
end)
        else
        local notificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoolManYesYes/Cool/refs/heads/main/Notification.luau"))();
local notifications = notificationLibrary.new({            
    NotificationLifetime = 3, 
    NotificationPosition = "Middle",
    
    TextFont = Enum.Font.Code,
    TextColor = Color3.fromRGB(255, 255, 255),
    TextSize = 15,
    
    TextStrokeTransparency = 0, 
    TextStrokeColor = Color3.fromRGB(0, 0, 0)
});

notifications:BuildNotificationUI();
notifications:Notify("Script not loaded");
        end
    end
)
